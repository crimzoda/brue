<Application x:Class="Brue.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Brue">
    <Application.Resources>
        <SolidColorBrush x:Key="ButtonColor" Color="#304FFE"/>
        <SolidColorBrush x:Key="ButtonTextColor" Color="#FFFF"/>
        <SolidColorBrush x:Key="ButtonHoverColor" Color="#0026CA"/>
        <SolidColorBrush x:Key="ButtonPressColor" Color="#7A7CFF"/>
        <SolidColorBrush x:Key="TextBoxActiveColor" Color="Gray"/>

        <Style x:Key="BrueButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource ButtonColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}"/>
            <Setter Property="Padding" Value="12, 6, 12, 6"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MaxHeight" Value="40"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="btnBorder" CornerRadius="3"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ButtonHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{DynamicResource ButtonPressColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="BrueTextBox" TargetType="TextBox">
            <Setter Property="BorderBrush" Value="DarkGray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <TextBlock x:Name="Placeholder"
                                       Text="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"
                                       Margin="4,2,0,0"
                                       Foreground="LightGray"
                                       IsHitTestVisible="False"
                                       Visibility="Visible">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource AncestorType=TextBox}}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <Border
                            x:Name="tbBorder"
                            SnapsToDevicePixels="True"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                                <ScrollViewer x:Name="PART_ContentHost"
                                          Background="Transparent"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="tbBorder" Property="BorderBrush" Value="{DynamicResource TextBoxActiveColor}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="Placeholder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Visibility" TargetName="Placeholder" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ModernMenuItem" TargetType="MenuItem">
            <Setter Property="Height" Value="28"/>
            <Setter Property="Padding" Value="12,0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#2c2c2c"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0">
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Header}"
                                                Margin="{TemplateBinding Padding}"
                                                VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#f0f0f0" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#e5e5e5" TargetName="Border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernContextMenu" TargetType="ContextMenu">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#dadce0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="8" 
                                    Direction="270" 
                                    Opacity="0.2" 
                                    ShadowDepth="2" 
                                    Color="#000000"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Effect="{TemplateBinding Effect}"
                                CornerRadius="4">
                            <StackPanel IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="MenuItem" BasedOn="{StaticResource ModernMenuItem}"/>
                <Style TargetType="Separator">
                    <Setter Property="Height" Value="1"/>
                    <Setter Property="Margin" Value="0,4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Separator}">
                                <Border BorderThickness="0" 
                                        Background="#e8eaed" 
                                        Height="1" 
                                        SnapsToDevicePixels="True"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>
    </Application.Resources>
</Application>
